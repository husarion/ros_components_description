<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Valid values for model parameter: -->
  <!--   - A2M7  -->
  <!--   - A2M8  -->
  <!--   - A2M12 -->
  <!-- Those values correspond to model code-names from SLAMTEC -->
  <xacro:macro name="slamtec_rplidar_a2"
               params="parent_link xyz rpy
                       use_gpu:=false
                       tf_prefix:=None
                       topic:=scan
                       frame_id:=laser
                       model:=A2M12
                       simulation_engine:=gazebo-classic">

    <xacro:if value="${use_gpu}">
      <xacro:if value="${simulation_engine == 'gazebo-classic'}">
        <xacro:property name="ray_type" value="gpu_ray" />
      </xacro:if>
      <xacro:if value="${simulation_engine == 'ignition-gazebo'}">
        <xacro:property name="ray_type" value="gpu_lidar" />
      </xacro:if>
    </xacro:if>
    <xacro:unless value="${use_gpu}">
      <xacro:if value="${simulation_engine == 'gazebo-classic'}">
        <xacro:property name="ray_type" value="ray" />
      </xacro:if>
      <xacro:if value="${simulation_engine == 'ignition-gazebo'}">
        <!-- use_gpu has to be set to true, CPU lidar doesn't work in ignition -
          https://github.com/gazebosim/gz-sensors/issues/26 -->
        <xacro:property name="ray_type" value="lidar" />
      </xacro:if>
    </xacro:unless>

    <xacro:if value="${tf_prefix == 'None'}">
      <xacro:property name="tf_prefix_ext" value="" />
    </xacro:if>
    <xacro:unless value="${tf_prefix == 'None'}">
      <xacro:property name="tf_prefix_ext" value="${tf_prefix}_" />
    </xacro:unless>

    <!--values of max distance are based on tradeoff values between best and worst case scenarios -->
    <!-- slamtec_rplidar_ax.dae is used as a shared mesh for A2 and A3 rplidars -->
    <xacro:if value="${model == 'A2M7'}">
      <xacro:property name="samples" value="1600" />
      <xacro:property name="max_distance" value="14.0" />
      <xacro:property name="mesh" value="slamtec_rplidar_ax.dae" />
    </xacro:if>

    <xacro:if value="${model == 'A2M8'}">
      <xacro:property name="samples" value="800" />
      <xacro:property name="max_distance" value="10.0" />
      <xacro:property name="mesh" value="slamtec_rplidar_a2m8.dae" />
    </xacro:if>

    <xacro:if value="${model == 'A2M12'}">
      <xacro:property name="samples" value="1600" />
      <xacro:property name="max_distance" value="10.0" />
      <xacro:property name="mesh" value="slamtec_rplidar_ax.dae" />
    </xacro:if>

    <joint name="${parent_link.rstrip('_link')}_to_${tf_prefix_ext}slamtec_rplidar_a2_joint" type="fixed">
      <origin xyz="${xyz}" rpy="${rpy}" />
      <parent link="${parent_link}" />
      <child link="${tf_prefix_ext}slamtec_rplidar_a2_link" />
    </joint>

    <link name="${tf_prefix_ext}slamtec_rplidar_a2_link">
      <visual>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
        <geometry>
          <mesh filename="file://$(find ros_components_description)/meshes/${mesh}" />
        </geometry>
      </visual>

      <collision>
        <origin xyz="0.0 0.0 ${0.041/2.0}" rpy="0.0 0.0 0.0" />
        <geometry>
          <cylinder radius="${0.076/2.0}" length="0.041" />
        </geometry>
      </collision>

      <inertial>
        <origin xyz="0.0 0.0 ${0.041/2.0}" rpy="0.0 0.0 0.0" />
        <mass value="0.190" />
        <inertia ixx="0.000095206" ixy="0.0"         ixz="0.0"
                                   iyy="0.000095206" iyz="0.0"
                                                     izz="0.00013718" />
      </inertial>
    </link>

    <joint name="${tf_prefix_ext}slamtec_rplidar_a2_to_${tf_prefix_ext}${frame_id.rstrip('_link')}_joint" type="fixed">
      <origin xyz="0.0 0.0 0.031" rpy="0.0 0.0 ${pi}" />
      <parent link="${tf_prefix_ext}slamtec_rplidar_a2_link" />
      <child link="${tf_prefix_ext}${frame_id}" />
    </joint>

    <link name="${tf_prefix_ext}${frame_id}" />

    <xacro:if value="${simulation_engine == 'ignition-gazebo'}">
      <gazebo reference="${tf_prefix_ext}${frame_id}">
        <sensor type="${ray_type}" name="${tf_prefix_ext}rplidar_a2_sensor">

          <topic>${topic}</topic>
          <frame_id>${tf_prefix_ext}${frame_id}</frame_id>
          <ignition_frame_id>${tf_prefix_ext}${frame_id}</ignition_frame_id>

          <update_rate>10.0</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1</resolution>
                <min_angle>-${pi}</min_angle>
                <max_angle>${pi}</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.2</min>
              <max>${max_distance}</max>
              <resolution>0.05</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.001</stddev>
            </noise>
          </ray>
          <always_on>true</always_on>
          <visualize>false</visualize>
        </sensor>
      </gazebo>
      <gazebo>
          <plugin filename="libignition-gazebo-sensors-system.so" name="ignition::gazebo::systems::Sensors">
            <render_engine>ogre2</render_engine>
          </plugin>
        </gazebo>
    </xacro:if>

    <xacro:if value="${simulation_engine == 'gazebo-classic'}">
      <gazebo reference="${tf_prefix_ext}${frame_id}">
        <sensor type="${ray_type}" name="${tf_prefix_ext}slamtec_rplidar_a2_sensor">
          <visualize>false</visualize>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1</resolution>
                <min_angle>-${pi}</min_angle>
                <max_angle>${pi}</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.2</min>
              <max>${max_distance}</max>
              <resolution>0.05</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.001</stddev>
            </noise>
          </ray>

          <update_rate>10.0</update_rate>

          <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace></namespace>
              <remapping>~/out:=${topic}</remapping>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
            <frame_name>${tf_prefix_ext}${frame_id}</frame_name>
          </plugin>
        </sensor>
      </gazebo>
    </xacro:if>
  </xacro:macro>
</robot>