<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:macro name="velodyne_puck"
               params="parent_link xyz rpy
                       use_gpu:=false
                       tf_prefix:=None
                       topic:=scan
                       frame_id:=velodyne
                       simulation_engine:=gazebo-classic">

    <xacro:if value="${use_gpu}">
      <xacro:property name="ray_type" value="gpu_ray" />
      <xacro:property name="plugin_file_name" value="libgazebo_ros_velodyne_gpu_laser.so" />
    </xacro:if>
    <xacro:unless value="${use_gpu}">
      <xacro:property name="ray_type" value="ray" />
      <xacro:property name="plugin_file_name" value="libgazebo_ros_velodyne_laser.so" />
    </xacro:unless>

    <xacro:if value="${tf_prefix == 'None'}">
      <xacro:property name="tf_prefix_ext" value="" />
    </xacro:if>
    <xacro:unless value="${tf_prefix == 'None'}">
      <xacro:property name="tf_prefix_ext" value="${tf_prefix}_" />
    </xacro:unless>

    <joint name="${parent_link.rstrip('_link')}_to_${tf_prefix_ext}velodyne_puck_joint" type="fixed">
      <origin xyz="${xyz}" rpy="${rpy}" />
      <parent link="${parent_link}" />
      <child link="${tf_prefix_ext}velodyne_puck_link" />
    </joint>

    <link name="${tf_prefix_ext}velodyne_puck_link">
      <visual>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
        <geometry>
          <mesh filename="file://$(find ros_components_description)/meshes/velodyne_puck.dae" />
        </geometry>
      </visual>

      <collision>
        <origin xyz="0.0 0.0 ${0.072/2.0}" rpy="0.0 0.0 0.0" />
        <geometry>
          <cylinder radius="${0.103/2.0}" length="0.072" />
        </geometry>
      </collision>

      <inertial>
        <origin xyz="0.0 0.0 ${0.072/2.0}" rpy="0.0 0.0 0.0" />
        <mass value="0.830" />
        <inertia ixx="0.001111" ixy="0.0"      ixz="0.0"
                                iyy="0.001109" iyz="0.0"
                                               izz="0.001493" />
      </inertial>
    </link>

    <joint name="${tf_prefix_ext}velodyne_puck_to_${tf_prefix_ext}${frame_id.rstrip('_link')}_joint"
      type="fixed">
      <origin xyz="0.0 0.0 0.0378" rpy="0.0 0.0 0.0" />
      <parent link="${tf_prefix_ext}velodyne_puck_link" />
      <child link="${tf_prefix_ext}${frame_id}" />
    </joint>

    <link name="${tf_prefix_ext}${frame_id}" />

    <gazebo reference="${tf_prefix_ext}${frame_id}">
      <sensor type="${ray_type}" name="${tf_prefix_ext}velodyne_puck_sensor">
        <visualize>false</visualize>
        <update_rate>10.0</update_rate>

        <ray>
          <scan>
            <horizontal>
              <samples>900</samples>
              <resolution>1</resolution>
              <min_angle>-${pi}</min_angle>
              <max_angle>${pi}</max_angle>
            </horizontal>
            <vertical>
              <samples>16</samples>
              <resolution>1</resolution>
              <min_angle>-${15.0/180.0*pi}</min_angle>
              <max_angle>${15.0/180.0*pi}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.4</min>
            <max>100.0</max>
            <resolution>0.003</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.0008</stddev>
          </noise>
        </ray>

        <xacro:if value="${simulation_engine == 'ignition-gazebo'}">
          <topic>${topic}</topic>
          <frame_id>${tf_prefix_ext}${frame_id}</frame_id>
          <ignition_frame_id>${tf_prefix_ext}${frame_id}</ignition_frame_id>
          <always_on>true</always_on>
          <plugin filename="libignition-gazebo-sensors-system.so"
            name="ignition::gazebo::systems::Sensors">
            <render_engine>ogre2</render_engine>
          </plugin>
        </xacro:if>

        <xacro:if value="${simulation_engine == 'gazebo-classic'}">
          <plugin name="${tf_prefix_ext}velodyne_puck_${ray_type}"
            filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace></namespace>
              <remapping>~/out:=${topic}</remapping>
            </ros>
            <output_type>sensor_msgs/PointCloud2</output_type>
            <frame_name>${tf_prefix_ext}${frame_id}</frame_name>
          </plugin>
        </xacro:if>

      </sensor>
    </gazebo>
  </xacro:macro>
</robot>
